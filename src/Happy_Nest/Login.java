/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Happy_Nest;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.attribute.DosFileAttributes;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Yunix
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        setNewPass();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        passwordButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 48)); // NOI18N
        jLabel1.setText("LOGIN");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Please Enter Password:");

        jPasswordField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPasswordField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 255, 204), null, null));
        jPasswordField1.setCaretColor(new java.awt.Color(204, 0, 51));
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        passwordButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        passwordButton.setText("Login");
        passwordButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        passwordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addGap(27, 27, 27))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passwordButton, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                    .addComponent(jPasswordField1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, Short.MAX_VALUE)
                .addGap(36, 36, 36)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void passwordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordButtonActionPerformed
        String username = System.getProperty("user.name");
        String directory = "C:\\Users\\"+username+"\\AppData\\Local\\password.txt"; //set directory
        String password = a+b+c+d+e+f+g+h+i+j+k+l+m;
       
        File doc = new File(directory);
        try {
            
            if (doc.exists())
            {
                Scanner input = new Scanner(doc);
                while(input.hasNextLine())//Read the content of txt file
                {
                    password = input.nextLine();
                    //System.out.println(password);
                }
                
            }
            else
            {
                JOptionPane.showMessageDialog(new JLabel(), "Error occured, password not found"
                        + "\nTry to restart program");
            }
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, "File not readable or does not exist", ex);
        }
        
        
        //passwordButton.setText(jPasswordField1.getText());
        if
        (new String(jPasswordField1.getPassword()).equals(a+b+c+d+e+f+g+h+i+j+k+l+m) || new String(jPasswordField1.getPassword()).equals(password))
        {
        
            Menu menu = new Menu();
            menu.setVisible(true);
        
            this.setVisible(false);
            this.dispose();
        }
        
    }//GEN-LAST:event_passwordButtonActionPerformed
    
    
    private void setNewPass() {
        String username = System.getProperty("user.name");
        String directory = "C:\\Users\\" + username + "\\AppData\\Local\\password.txt"; //set directory
        String password;

        File doc = new File(directory);

        if (!doc.exists()) {
            FileWriter writer = null;
            try {
                password = JOptionPane.showInputDialog(new JLabel(), "Enter new password");
                JOptionPane.showMessageDialog(new JLabel(), "The new password is set to " + password);
                writer = new FileWriter(directory);
                writer.write(password); //set the password for the first time
                writer.close();
            } catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    writer.close();
                } catch (IOException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
        setHiddenAttrib(Path.of(directory));
    }
        
    private static void setHiddenAttrib(Path filePath) 
    {		
        try {
        DosFileAttributes attr = Files.readAttributes(filePath, DosFileAttributes.class);
        System.out.println(filePath.getFileName() + " Hidden attribute is " + attr.isHidden());
        Files.setAttribute(filePath, "dos:hidden", true);
        attr = Files.readAttributes(filePath, DosFileAttributes.class);
        System.out.println(filePath.getFileName() + " Hidden attribute is " + attr.isHidden());
        } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
        } 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    
    private String a = "HXC;H";
    private String b = "<,EaK";
    private String c = "/chcE";
    private String d = "Pcd}a";
    private String e = "QhD\".";
    private String f = "X+3(_";
    private String g = "`CHXC";
    private String h = ";H<,E";
    private String i = "aK/ch";
    private String j = "cEPcd";
    private String k = "}aQhD";
    private String l = "\".X+3";
    private String m = "(_`C";
    private String n = "k&sSM";
    private String O = "sWqS3";

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JButton passwordButton;
    // End of variables declaration//GEN-END:variables
}



/*
 public void iloadFromFile() throws IOException
    {
        File c = new File("Vendors.o");
        if (!c.exists())
            return;
        String text, rtext;
        try (Scanner fw = new Scanner(c)) {
            
            while(fw.hasNextLine())
            {
                Vendor vendor = new Vendor();
                vendor.setName(fw.nextLine());
                vendor.setDate(fw.nextLong());
                text = "";
                while(true)
                {
                    rtext = fw.nextLine();
                    if (rtext.equals("#endOfRecord#"))
                        break;
                    else
                        text += rtext + "\n";
                }
                text = text.trim();
                vendor.setDescription(text);
                lista.add(vendor);
                listanames.add(lista.get(lista.size()-1).getName());
            }
        }
        File pc = new File("Products.o");
        if (!pc.exists())
            return;
        
        Scanner pfw = new Scanner(pc);
        
        int index;
        if(pfw.hasNextLine())
            pfw.nextLine();
        else
            return;
        while(pfw.hasNextLine())
        {
            Product product = new Product();
            index = pfw.nextInt();
            pfw.nextLine();
            product.setName(pfw.nextLine());
            product.setCost(pfw.nextFloat());
            product.setDate(pfw.nextLong());
            //JOptionPane.showMessageDialog(new JLabel(), "s: " + product.getName() + " " + product.getCost() + " " + product.getSDate());
            lista.get(index).addProduct(product);
        }
        pfw.close();
       
    }
    
    public void isaveToFile() throws IOException
    {
        File c = new File("Vendors.o");
        if (c.exists())
            c.delete();
        c.createNewFile();
        c.setWritable(true);
        c.setReadable(true);
        
        c = new File("Products.o");
        if (c.exists())
            c.delete();
        c.createNewFile();
        c.setWritable(true);
        c.setReadable(true);
       
        FileWriter fw = new FileWriter("Vendors.o");
        FileWriter pfw = new FileWriter("Products.o");
        for(int i = 0; i < lista.size(); i++)
        {
            fw.write(lista.get(i).getName() + "\n");
            fw.write(String.valueOf(lista.get(i).getCreationTime()) + "\n");
            fw.write(lista.get(i).getDesc() + "\n");
            fw.write("#endOfRecord#\n");
            
            
            for(int j = 0; j < lista.get(i).; j++)
            {
                pfw.write("\n" + i);
                pfw.write("\n" + lista.get(i).getProduct(j).getName());
                pfw.write("\n" + lista.get(i).getProduct(j).getCost());
                pfw.write("\n" + lista.get(i).getProduct(j).getCreationTime());
            }
        }
        fw.close();
        pfw.close();
    }
*/